// <auto-generated />
using System;
using BaseCureAPI.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BaseCureAPI.Migrations
{
    [DbContext(typeof(BasecureContext))]
    partial class BasecureContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BaseCureAPI.DB.Models.AuthToken", b =>
                {
                    b.Property<int>("AuthTokenId")
                        .HasColumnType("int")
                        .HasColumnName("auth_token_id");

                    b.Property<string>("Code2f")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("code2f");

                    b.Property<string>("IpAdresa")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ip_adresa");

                    b.Property<string>("Is2fOtkljucan")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("is_2f_otkljucan");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("korisnik_id");

                    b.Property<string>("Vrijednost")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vrijednost");

                    b.Property<DateTime?>("VrijemeEvidentiranja")
                        .HasColumnType("datetime")
                        .HasColumnName("vrijeme_evidentiranja");

                    b.HasKey("AuthTokenId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("AuthToken", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Dijagnoze", b =>
                {
                    b.Property<int>("DijagnozaId")
                        .HasColumnType("int")
                        .HasColumnName("dijagnoza_id");

                    b.Property<DateTime?>("DatumDijagnoze")
                        .HasColumnType("date")
                        .HasColumnName("datum_dijagnoze");

                    b.Property<string>("NazivDijagnoze")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("naziv_dijagnoze");

                    b.HasKey("DijagnozaId")
                        .HasName("PK__Dijagnoz__A34E4E8C5BD7A785");

                    b.ToTable("Dijagnoze", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Gradovi", b =>
                {
                    b.Property<int>("GradId")
                        .HasColumnType("int")
                        .HasColumnName("grad_id");

                    b.Property<string>("Drzava")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("drzava");

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("naziv");

                    b.HasKey("GradId")
                        .HasName("PK__Gradovi__F8C78A45807D5559");

                    b.ToTable("Gradovi", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("korisnik_id");

                    b.Property<string>("Adresa")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("adresa");

                    b.Property<string>("BrojTelefona")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("broj_telefona");

                    b.Property<string>("Code2fa")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("code2fa");

                    b.Property<DateTime?>("DatumRodjenja")
                        .HasColumnType("date")
                        .HasColumnName("datum_rodjenja");

                    b.Property<int?>("GradId")
                        .HasColumnType("int")
                        .HasColumnName("grad_id");

                    b.Property<string>("HashLozinke")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hash_lozinke");

                    b.Property<string>("Ime")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ime");

                    b.Property<string>("MailAdresa")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mail_adresa");

                    b.Property<int?>("OsobljeId")
                        .HasColumnType("int")
                        .HasColumnName("osoblje_id");

                    b.Property<string>("Prezime")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("prezime");

                    b.HasKey("KorisnikId")
                        .HasName("PK__Korisnic__B84D9F56A69A8486");

                    b.HasIndex("GradId");

                    b.HasIndex("OsobljeId");

                    b.ToTable("Korisnici", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.LaboratorijskiRezultati", b =>
                {
                    b.Property<int>("RezultatId")
                        .HasColumnType("int")
                        .HasColumnName("rezultat_id");

                    b.Property<DateTime?>("DatumAnalize")
                        .HasColumnType("datetime")
                        .HasColumnName("datum_analize");

                    b.Property<int?>("KartonId")
                        .HasColumnType("int")
                        .HasColumnName("karton_id");

                    b.Property<string>("RezultatiAnalize")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rezultati_analize");

                    b.Property<string>("VrstaAnalize")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vrsta_analize");

                    b.HasKey("RezultatId")
                        .HasName("PK__Laborato__FB858D87442E1142");

                    b.HasIndex("KartonId");

                    b.ToTable("LaboratorijskiRezultati", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Lijekovi", b =>
                {
                    b.Property<int>("LijekId")
                        .HasColumnType("int")
                        .HasColumnName("lijek_id");

                    b.Property<double?>("Cijena")
                        .HasColumnType("float")
                        .HasColumnName("cijena");

                    b.Property<int?>("Kolicina")
                        .HasColumnType("int")
                        .HasColumnName("kolicina");

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("naziv");

                    b.Property<string>("Opis")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("opis");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("slika");

                    b.Property<int?>("UstanovaId")
                        .HasColumnType("int")
                        .HasColumnName("ustanova_id");

                    b.Property<bool?>("ZahtijevaRecept")
                        .HasColumnType("bit")
                        .HasColumnName("zahtijeva_recept");

                    b.HasKey("LijekId")
                        .HasName("PK__Lijekovi__0C12572B97C36743");

                    b.HasIndex("UstanovaId");

                    b.ToTable("Lijekovi", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Ljekari", b =>
                {
                    b.Property<int>("LjekarId")
                        .HasColumnType("int")
                        .HasColumnName("ljekar_id");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("korisnik_id");

                    b.Property<string>("Opis")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("opis");

                    b.Property<string>("Specijalizacija")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("specijalizacija");

                    b.Property<int?>("UstanovaId")
                        .HasColumnType("int")
                        .HasColumnName("ustanova_id");

                    b.HasKey("LjekarId")
                        .HasName("PK__Ljekari__1EDECCBAD0ACFBEC");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UstanovaId");

                    b.ToTable("Ljekari", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Napomene", b =>
                {
                    b.Property<int>("NapomenaId")
                        .HasColumnType("int")
                        .HasColumnName("napomena_id");

                    b.Property<DateTime?>("DatumKreiranja")
                        .HasColumnType("datetime")
                        .HasColumnName("datum_kreiranja");

                    b.Property<int?>("KartonId")
                        .HasColumnType("int")
                        .HasColumnName("karton_id");

                    b.Property<string>("NaslovNapomene")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("naslov_napomene");

                    b.Property<string>("TekstNapomene")
                        .HasColumnType("text")
                        .HasColumnName("tekst_napomene");

                    b.HasKey("NapomenaId")
                        .HasName("PK__Napomene__4B9D0366746F933F");

                    b.HasIndex("KartonId");

                    b.ToTable("Napomene", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Narudzbe", b =>
                {
                    b.Property<int>("NarudzbaId")
                        .HasColumnType("int")
                        .HasColumnName("narudzba_id");

                    b.Property<string>("Adresa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("adresa");

                    b.Property<string>("BrojTelefona")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("broj_telefona");

                    b.Property<DateTime?>("DatumVrijeme")
                        .HasColumnType("datetime")
                        .HasColumnName("datum_vrijeme");

                    b.Property<int?>("GradId")
                        .HasColumnType("int")
                        .HasColumnName("grad_id");

                    b.Property<string>("ImePrezime")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ime_prezime");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("korisnik_id");

                    b.Property<int?>("LijekId")
                        .HasColumnType("int")
                        .HasColumnName("lijek_id");

                    b.Property<string>("MailAdresa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("mail_adresa");

                    b.Property<int?>("RedniBroj")
                        .HasColumnType("int")
                        .HasColumnName("redni_broj");

                    b.Property<string>("Status")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("status");

                    b.HasKey("NarudzbaId")
                        .HasName("PK__Lijekovi__26E2BC6DD049B088");

                    b.HasIndex("GradId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("LijekId");

                    b.ToTable("Narudzbe", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Osoblje", b =>
                {
                    b.Property<int>("OsobljeId")
                        .HasColumnType("int")
                        .HasColumnName("osoblje_id");

                    b.Property<string>("PunoIme")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("puno_ime");

                    b.Property<int?>("UlogaId")
                        .HasColumnType("int")
                        .HasColumnName("uloga_id");

                    b.Property<int?>("UstanovaId")
                        .HasColumnType("int")
                        .HasColumnName("ustanova_id");

                    b.HasKey("OsobljeId");

                    b.HasIndex("UlogaId");

                    b.HasIndex("UstanovaId");

                    b.ToTable("Osoblje", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Pacijenti", b =>
                {
                    b.Property<int>("PacijentId")
                        .HasColumnType("int")
                        .HasColumnName("pacijent_id");

                    b.Property<string>("Alergije")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("korisnik_id");

                    b.Property<string>("KrvnaGrupa")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Lijekovi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NavikePonasanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PorodicnaAnamneza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PritisakDistolicki")
                        .HasColumnType("int");

                    b.Property<int?>("PritisakSistolicki")
                        .HasColumnType("int");

                    b.Property<int?>("Pulz")
                        .HasColumnType("int");

                    b.Property<string>("RanijeBolesti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Tezina")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("TrenutneBolesti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Visina")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("PacijentId")
                        .HasName("PK__Pacijent__2D69AC70C505BA07");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Pacijenti", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Pregledi", b =>
                {
                    b.Property<int>("PregledId")
                        .HasColumnType("int")
                        .HasColumnName("pregled_id");

                    b.Property<DateTime?>("DatumPregleda")
                        .HasColumnType("datetime")
                        .HasColumnName("datum_pregleda");

                    b.Property<int?>("DijagnozaId")
                        .HasColumnType("int")
                        .HasColumnName("dijagnoza_id");

                    b.Property<int?>("LjekarId")
                        .HasColumnType("int")
                        .HasColumnName("ljekar_id");

                    b.Property<string>("Rezultati")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rezultati");

                    b.HasKey("PregledId")
                        .HasName("PK__Pregledi__46C8583B2B340B33");

                    b.HasIndex("DijagnozaId");

                    b.HasIndex("LjekarId");

                    b.ToTable("Pregledi", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Recepti", b =>
                {
                    b.Property<int>("ReceptId")
                        .HasColumnType("int")
                        .HasColumnName("recept_id");

                    b.Property<DateTime?>("DatumReceptiranja")
                        .HasColumnType("date")
                        .HasColumnName("datum_receptiranja");

                    b.Property<int?>("LijekId")
                        .HasColumnType("int")
                        .HasColumnName("lijek_id");

                    b.Property<int?>("LjekarId")
                        .HasColumnType("int")
                        .HasColumnName("ljekar_id");

                    b.Property<int?>("TerapijaId")
                        .HasColumnType("int")
                        .HasColumnName("terapija_id");

                    b.HasKey("ReceptId")
                        .HasName("PK__Recepti__4B832CF3F694F291");

                    b.HasIndex("LijekId");

                    b.HasIndex("LjekarId");

                    b.HasIndex("TerapijaId");

                    b.ToTable("Recepti", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Terapije", b =>
                {
                    b.Property<int>("TerapijaId")
                        .HasColumnType("int")
                        .HasColumnName("terapija_id");

                    b.Property<int?>("KartonId")
                        .HasColumnType("int")
                        .HasColumnName("karton_id");

                    b.Property<DateTime?>("KrajTerapije")
                        .HasColumnType("date")
                        .HasColumnName("kraj_terapije");

                    b.Property<string>("NazivTerapije")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("naziv_terapije");

                    b.Property<DateTime?>("PocetakTerapije")
                        .HasColumnType("date")
                        .HasColumnName("pocetak_terapije");

                    b.HasKey("TerapijaId")
                        .HasName("PK__Terapije__DC77D19B375748D2");

                    b.HasIndex("KartonId");

                    b.ToTable("Terapije", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Termini", b =>
                {
                    b.Property<int>("TerminId")
                        .HasColumnType("int")
                        .HasColumnName("termin_id");

                    b.Property<DateTime?>("DatumTermina")
                        .HasColumnType("datetime")
                        .HasColumnName("datum_termina");

                    b.Property<int?>("LjekarId")
                        .HasColumnType("int")
                        .HasColumnName("ljekar_id");

                    b.Property<int?>("PacijentId")
                        .HasColumnType("int")
                        .HasColumnName("pacijent_id");

                    b.Property<int?>("UstanovaId")
                        .HasColumnType("int")
                        .HasColumnName("ustanova_id");

                    b.HasKey("TerminId")
                        .HasName("PK__Termini__714C62A819DFE20A");

                    b.HasIndex("LjekarId");

                    b.HasIndex("PacijentId");

                    b.HasIndex("UstanovaId");

                    b.ToTable("Termini", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.TipoviUstanova", b =>
                {
                    b.Property<int>("TipUstanoveId")
                        .HasColumnType("int")
                        .HasColumnName("tip_ustanove_id");

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("naziv");

                    b.HasKey("TipUstanoveId")
                        .HasName("PK__TipoviUs__BBD5B854959A80EE");

                    b.ToTable("TipoviUstanova", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .HasColumnType("int")
                        .HasColumnName("uloga_id");

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("naziv");

                    b.HasKey("UlogaId")
                        .HasName("PK__Uloge__03C8E0D87069389C");

                    b.ToTable("Uloge", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.UstanoveZdravstva", b =>
                {
                    b.Property<int>("UstanovaId")
                        .HasColumnType("int")
                        .HasColumnName("ustanova_id");

                    b.Property<string>("Adresa")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("adresa");

                    b.Property<string>("BrojTelefona")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("broj_telefona");

                    b.Property<float?>("CijenaDostave")
                        .HasColumnType("real")
                        .HasColumnName("cijena_dostave");

                    b.Property<int?>("GradId")
                        .HasColumnType("int")
                        .HasColumnName("grad_id");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float")
                        .HasColumnName("latitude");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float")
                        .HasColumnName("longitude");

                    b.Property<string>("MailAdresa")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mail_adresa");

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("naziv");

                    b.Property<string>("Opis")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("opis");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("slika");

                    b.Property<int?>("TipUstanoveId")
                        .HasColumnType("int")
                        .HasColumnName("tip_ustanove_id");

                    b.HasKey("UstanovaId")
                        .HasName("PK__Ustanove__5C9BF779681C94EE");

                    b.HasIndex("GradId");

                    b.HasIndex("TipUstanoveId");

                    b.ToTable("UstanoveZdravstva", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.ZdravstveniKartoni", b =>
                {
                    b.Property<int>("KartonId")
                        .HasColumnType("int")
                        .HasColumnName("karton_id");

                    b.Property<DateTime?>("DatumIzdavanja")
                        .HasColumnType("datetime")
                        .HasColumnName("datum_izdavanja");

                    b.Property<int?>("PacijentId")
                        .HasColumnType("int")
                        .HasColumnName("pacijent_id");

                    b.Property<int?>("PregledId")
                        .HasColumnType("int")
                        .HasColumnName("pregled_id");

                    b.Property<string>("Sadrzaj")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("sadrzaj");

                    b.HasKey("KartonId")
                        .HasName("PK__Zdravstv__343D9B086C4B1945");

                    b.HasIndex("PacijentId");

                    b.HasIndex("PregledId");

                    b.ToTable("ZdravstveniKartoni", (string)null);
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.AuthToken", b =>
                {
                    b.HasOne("BaseCureAPI.DB.Models.Korisnici", "Korisnik")
                        .WithMany("AuthTokens")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__AuthToken__koris__160F4887");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Korisnici", b =>
                {
                    b.HasOne("BaseCureAPI.DB.Models.Gradovi", "Grad")
                        .WithMany("Korisnicis")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK__Korisnici__grad___44CA3770");

                    b.HasOne("BaseCureAPI.DB.Models.Osoblje", "Osoblje")
                        .WithMany("Korisnicis")
                        .HasForeignKey("OsobljeId")
                        .HasConstraintName("FK__Korisnici__osobl__45BE5BA9");

                    b.Navigation("Grad");

                    b.Navigation("Osoblje");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.LaboratorijskiRezultati", b =>
                {
                    b.HasOne("BaseCureAPI.DB.Models.ZdravstveniKartoni", "Karton")
                        .WithMany("LaboratorijskiRezultatis")
                        .HasForeignKey("KartonId")
                        .HasConstraintName("FK__Laborator__karto__46E78A0C");

                    b.Navigation("Karton");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Lijekovi", b =>
                {
                    b.HasOne("BaseCureAPI.DB.Models.UstanoveZdravstva", "Ustanova")
                        .WithMany("Lijekovis")
                        .HasForeignKey("UstanovaId")
                        .HasConstraintName("FK__Lijekovi__ustano__2739D489");

                    b.Navigation("Ustanova");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Ljekari", b =>
                {
                    b.HasOne("BaseCureAPI.DB.Models.Korisnici", "Korisnik")
                        .WithMany("Ljekaris")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Ljekari__korisni__4F7CD00D");

                    b.HasOne("BaseCureAPI.DB.Models.UstanoveZdravstva", "Ustanova")
                        .WithMany("Ljekaris")
                        .HasForeignKey("UstanovaId")
                        .HasConstraintName("FK__Ljekari__ustanov__5070F446");

                    b.Navigation("Korisnik");

                    b.Navigation("Ustanova");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Napomene", b =>
                {
                    b.HasOne("BaseCureAPI.DB.Models.ZdravstveniKartoni", "Karton")
                        .WithMany("Napomenes")
                        .HasForeignKey("KartonId")
                        .HasConstraintName("FK__Napomene__karton__49C3F6B7");

                    b.Navigation("Karton");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Narudzbe", b =>
                {
                    b.HasOne("BaseCureAPI.DB.Models.Gradovi", "Grad")
                        .WithMany("Narudzbes")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK__Narudzbe__grad_i__6166761E");

                    b.HasOne("BaseCureAPI.DB.Models.Korisnici", "Korisnik")
                        .WithMany("Narudzbes")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__LijekoviK__koris__3C34F16F");

                    b.HasOne("BaseCureAPI.DB.Models.Lijekovi", "Lijek")
                        .WithMany("Narudzbes")
                        .HasForeignKey("LijekId")
                        .HasConstraintName("FK__LijekoviK__lijek__3D2915A8");

                    b.Navigation("Grad");

                    b.Navigation("Korisnik");

                    b.Navigation("Lijek");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Osoblje", b =>
                {
                    b.HasOne("BaseCureAPI.DB.Models.Uloge", "Uloga")
                        .WithMany("Osobljes")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK__Osoblje__uloga_i__46B27FE2");

                    b.HasOne("BaseCureAPI.DB.Models.UstanoveZdravstva", "Ustanova")
                        .WithMany("Osobljes")
                        .HasForeignKey("UstanovaId")
                        .HasConstraintName("FK__Osoblje__ustanov__2B3F6F97");

                    b.Navigation("Uloga");

                    b.Navigation("Ustanova");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Pacijenti", b =>
                {
                    b.HasOne("BaseCureAPI.DB.Models.Korisnici", "Korisnik")
                        .WithMany("Pacijentis")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Pacijenti__koris__47A6A41B");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Pregledi", b =>
                {
                    b.HasOne("BaseCureAPI.DB.Models.Dijagnoze", "Dijagnoza")
                        .WithMany("Pregledis")
                        .HasForeignKey("DijagnozaId")
                        .HasConstraintName("FK__Pregledi__dijagn__34C8D9D1");

                    b.HasOne("BaseCureAPI.DB.Models.Ljekari", "Ljekar")
                        .WithMany("Pregledis")
                        .HasForeignKey("LjekarId")
                        .HasConstraintName("FK__Pregledi__ljekar__52593CB8");

                    b.Navigation("Dijagnoza");

                    b.Navigation("Ljekar");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Recepti", b =>
                {
                    b.HasOne("BaseCureAPI.DB.Models.Lijekovi", "Lijek")
                        .WithMany("Receptis")
                        .HasForeignKey("LijekId")
                        .HasConstraintName("FK__Recepti__lijek_i__4316F928");

                    b.HasOne("BaseCureAPI.DB.Models.Ljekari", "Ljekar")
                        .WithMany("Receptis")
                        .HasForeignKey("LjekarId")
                        .HasConstraintName("FK__Recepti__ljekar___534D60F1");

                    b.HasOne("BaseCureAPI.DB.Models.Terapije", "Terapija")
                        .WithMany("Receptis")
                        .HasForeignKey("TerapijaId")
                        .HasConstraintName("FK__Recepti__terapij__440B1D61");

                    b.Navigation("Lijek");

                    b.Navigation("Ljekar");

                    b.Navigation("Terapija");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Terapije", b =>
                {
                    b.HasOne("BaseCureAPI.DB.Models.ZdravstveniKartoni", "Karton")
                        .WithMany("Terapijes")
                        .HasForeignKey("KartonId")
                        .HasConstraintName("FK__Terapije__karton__3B75D760");

                    b.Navigation("Karton");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Termini", b =>
                {
                    b.HasOne("BaseCureAPI.DB.Models.Ljekari", "Ljekar")
                        .WithMany("Terminis")
                        .HasForeignKey("LjekarId")
                        .HasConstraintName("FK__Termini__ljekar___5165187F");

                    b.HasOne("BaseCureAPI.DB.Models.Pacijenti", "Pacijent")
                        .WithMany("Terminis")
                        .HasForeignKey("PacijentId")
                        .HasConstraintName("FK__Termini__pacijen__300424B4");

                    b.HasOne("BaseCureAPI.DB.Models.UstanoveZdravstva", "Ustanova")
                        .WithMany("Terminis")
                        .HasForeignKey("UstanovaId")
                        .HasConstraintName("FK__Termini__ustanov__2F10007B");

                    b.Navigation("Ljekar");

                    b.Navigation("Pacijent");

                    b.Navigation("Ustanova");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.UstanoveZdravstva", b =>
                {
                    b.HasOne("BaseCureAPI.DB.Models.Gradovi", "Grad")
                        .WithMany("UstanoveZdravstvas")
                        .HasForeignKey("GradId")
                        .HasConstraintName("FK__UstanoveZ__grad___4D5F7D71");

                    b.HasOne("BaseCureAPI.DB.Models.TipoviUstanova", "TipUstanove")
                        .WithMany("UstanoveZdravstvas")
                        .HasForeignKey("TipUstanoveId")
                        .HasConstraintName("FK__UstanoveZ__tip_u__43D61337");

                    b.Navigation("Grad");

                    b.Navigation("TipUstanove");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.ZdravstveniKartoni", b =>
                {
                    b.HasOne("BaseCureAPI.DB.Models.Pacijenti", "Pacijent")
                        .WithMany("ZdravstveniKartonis")
                        .HasForeignKey("PacijentId")
                        .HasConstraintName("FK__Zdravstve__pacij__37A5467C");

                    b.HasOne("BaseCureAPI.DB.Models.Pregledi", "Pregled")
                        .WithMany("ZdravstveniKartonis")
                        .HasForeignKey("PregledId")
                        .HasConstraintName("FK__Zdravstve__pregl__38996AB5");

                    b.Navigation("Pacijent");

                    b.Navigation("Pregled");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Dijagnoze", b =>
                {
                    b.Navigation("Pregledis");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Gradovi", b =>
                {
                    b.Navigation("Korisnicis");

                    b.Navigation("Narudzbes");

                    b.Navigation("UstanoveZdravstvas");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Korisnici", b =>
                {
                    b.Navigation("AuthTokens");

                    b.Navigation("Ljekaris");

                    b.Navigation("Narudzbes");

                    b.Navigation("Pacijentis");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Lijekovi", b =>
                {
                    b.Navigation("Narudzbes");

                    b.Navigation("Receptis");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Ljekari", b =>
                {
                    b.Navigation("Pregledis");

                    b.Navigation("Receptis");

                    b.Navigation("Terminis");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Osoblje", b =>
                {
                    b.Navigation("Korisnicis");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Pacijenti", b =>
                {
                    b.Navigation("Terminis");

                    b.Navigation("ZdravstveniKartonis");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Pregledi", b =>
                {
                    b.Navigation("ZdravstveniKartonis");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Terapije", b =>
                {
                    b.Navigation("Receptis");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.TipoviUstanova", b =>
                {
                    b.Navigation("UstanoveZdravstvas");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.Uloge", b =>
                {
                    b.Navigation("Osobljes");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.UstanoveZdravstva", b =>
                {
                    b.Navigation("Lijekovis");

                    b.Navigation("Ljekaris");

                    b.Navigation("Osobljes");

                    b.Navigation("Terminis");
                });

            modelBuilder.Entity("BaseCureAPI.DB.Models.ZdravstveniKartoni", b =>
                {
                    b.Navigation("LaboratorijskiRezultatis");

                    b.Navigation("Napomenes");

                    b.Navigation("Terapijes");
                });
#pragma warning restore 612, 618
        }
    }
}
